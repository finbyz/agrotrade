{
  "version": 3,
  "sources": ["../../../../../apps/agrotrade/agrotrade/public/js/utils.js", "../../../../../apps/agrotrade/agrotrade/public/js/gst_itemised_sales_register.js", "../../../../../apps/agrotrade/agrotrade/public/js/gst_itemised_purchase_register.js", "../../../../../apps/agrotrade/agrotrade/public/js/general_ledger.js"],
  "sourcesContent": ["// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// License: GNU General Public License v3. See license.txt\nfrappe.provide(\"erpnext\");\nfrappe.provide(\"erpnext.utils\");\n\n$.extend(erpnext, {\n\tget_currency: function(company) {\n\t\tif(!company && cur_frm)\n\t\t\tcompany = cur_frm.doc.company;\n\t\tif(company)\n\t\t\treturn frappe.get_doc(\":Company\", company).default_currency || frappe.boot.sysdefaults.currency;\n\t\telse\n\t\t\treturn frappe.boot.sysdefaults.currency;\n\t},\n\n\tget_presentation_currency_list: () => {\n\t\tconst docs = frappe.boot.docs;\n\t\tlet currency_list = docs.filter(d => d.doctype === \":Currency\").map(d => d.name);\n\t\tcurrency_list.unshift(\"\");\n\t\treturn currency_list;\n\t},\n\n\ttoggle_naming_series: function() {\n\t\tif(cur_frm.fields_dict.naming_series) {\n\t\t\tcur_frm.toggle_display(\"naming_series\", cur_frm.doc.__islocal?true:false);\n\t\t}\n\t},\n\n\thide_company: function() {\n\t\tif(cur_frm.fields_dict.company) {\n\t\t\tvar companies = Object.keys(locals[\":Company\"] || {});\n\t\t\tif(companies.length === 1) {\n\t\t\t\tif(!cur_frm.doc.company) cur_frm.set_value(\"company\", companies[0]);\n\t\t\t\tcur_frm.toggle_display(\"company\", false);\n\t\t\t} else if(erpnext.last_selected_company) {\n\t\t\t\tif(!cur_frm.doc.company) cur_frm.set_value(\"company\", erpnext.last_selected_company);\n\t\t\t}\n\t\t}\n\t},\n\n\tis_perpetual_inventory_enabled: function(company) {\n\t\tif(company) {\n\t\t\treturn frappe.get_doc(\":Company\", company).enable_perpetual_inventory\n\t\t}\n\t},\n\n\tstale_rate_allowed: () => {\n\t\treturn cint(frappe.boot.sysdefaults.allow_stale);\n\t},\n\n\tsetup_serial_or_batch_no: function() {\n\t\tlet grid_row = cur_frm.open_grid_row();\n\t\tif (!grid_row || !grid_row.grid_form.fields_dict.serial_no ||\n\t\t\tgrid_row.grid_form.fields_dict.serial_no.get_status() !== \"Write\") return;\n\n\t\tfrappe.model.get_value('Item', {'name': grid_row.doc.item_code},\n\t\t\t['has_serial_no', 'has_batch_no'], ({has_serial_no, has_batch_no}) => {\n\t\t\t\tObject.assign(grid_row.doc, {has_serial_no, has_batch_no});\n\n\t\t\t\tif (has_serial_no) {\n\t\t\t\t\tattach_selector_button(__(\"Add Serial No\"),\n\t\t\t\t\t\tgrid_row.grid_form.fields_dict.serial_no.$wrapper, this, grid_row);\n\t\t\t\t} else if (has_batch_no) {\n\t\t\t\t\tattach_selector_button(__(\"Pick Batch No\"),\n\t\t\t\t\t\tgrid_row.grid_form.fields_dict.batch_no.$wrapper, this, grid_row);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t},\n\n\troute_to_adjustment_jv: (args) => {\n\t\tfrappe.model.with_doctype('Journal Entry', () => {\n\t\t\t// route to adjustment Journal Entry to handle Account Balance and Stock Value mismatch\n\t\t\tlet journal_entry = frappe.model.get_new_doc('Journal Entry');\n\n\t\t\targs.accounts.forEach((je_account) => {\n\t\t\t\tlet child_row = frappe.model.add_child(journal_entry, \"accounts\");\n\t\t\t\tchild_row.account = je_account.account;\n\t\t\t\tchild_row.debit_in_account_currency = je_account.debit_in_account_currency;\n\t\t\t\tchild_row.credit_in_account_currency = je_account.credit_in_account_currency;\n\t\t\t\tchild_row.party_type = \"\" ;\n\t\t\t});\n\t\t\tfrappe.set_route('Form','Journal Entry', journal_entry.name);\n\t\t});\n\t},\n\n\troute_to_pending_reposts: (args) => {\n\t\tfrappe.set_route('List', 'Repost Item Valuation', args);\n\t},\n\n\tproceed_save_with_reminders_frequency_change: () => {\n\t\tfrappe.ui.hide_open_dialog();\n\n\t\tfrappe.call({\n\t\t\tmethod: 'erpnext.hr.doctype.hr_settings.hr_settings.set_proceed_with_frequency_change',\n\t\t\tcallback: () => {\n\t\t\t\tcur_frm.save();\n\t\t\t}\n\t\t});\n\t}\n});\n\n\n$.extend(erpnext.utils, {\n\tset_party_dashboard_indicators: function(frm) {\n\t\tif(frm.doc.__onload && frm.doc.__onload.dashboard_info) {\n\t\t\tvar company_wise_info = frm.doc.__onload.dashboard_info;\n\t\t\tif(company_wise_info.length > 1) {\n\t\t\t\tcompany_wise_info.forEach(function(info) {\n\t\t\t\t\terpnext.utils.add_indicator_for_multicompany(frm, info);\n\t\t\t\t});\n\t\t\t} else if (company_wise_info.length === 1) {\n\t\t\t\tfrm.dashboard.add_indicator(__('Annual Billing: {0}',\n\t\t\t\t\t[format_currency(company_wise_info[0].billing_this_year, company_wise_info[0].currency)]), 'blue');\n\t\t\t\tfrm.dashboard.add_indicator(__('Total Unpaid: {0}',\n\t\t\t\t\t[format_currency(company_wise_info[0].total_unpaid, company_wise_info[0].currency)]),\n\t\t\t\tcompany_wise_info[0].total_unpaid ? 'orange' : 'green');\n\n\t\t\t\tif(company_wise_info[0].loyalty_points) {\n\t\t\t\t\tfrm.dashboard.add_indicator(__('Loyalty Points: {0}',\n\t\t\t\t\t\t[company_wise_info[0].loyalty_points]), 'blue');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tadd_indicator_for_multicompany: function(frm, info) {\n\t\tfrm.dashboard.stats_area.removeClass('hidden');\n\t\tfrm.dashboard.stats_area_row.addClass('flex');\n\t\tfrm.dashboard.stats_area_row.css('flex-wrap', 'wrap');\n\n\t\tvar color = info.total_unpaid ? 'orange' : 'green';\n\n\t\tvar indicator = $('<div class=\"flex-column col-xs-6\">'+\n\t\t\t'<div style=\"margin-top:10px\"><h6>'+info.company+'</h6></div>'+\n\n\t\t\t'<div class=\"badge-link small\" style=\"margin-bottom:10px\"><span class=\"indicator blue\">'+\n\t\t\t'Annual Billing: '+format_currency(info.billing_this_year, info.currency)+'</span></div>'+\n\n\t\t\t'<div class=\"badge-link small\" style=\"margin-bottom:10px\">'+\n\t\t\t'<span class=\"indicator '+color+'\">Total Unpaid: '\n\t\t\t+format_currency(info.total_unpaid, info.currency)+'</span></div>'+\n\n\n\t\t\t'</div>').appendTo(frm.dashboard.stats_area_row);\n\n\t\tif(info.loyalty_points){\n\t\t\t$('<div class=\"badge-link small\" style=\"margin-bottom:10px\"><span class=\"indicator blue\">'+\n\t\t\t'Loyalty Points: '+info.loyalty_points+'</span></div>').appendTo(indicator);\n\t\t}\n\n\t\treturn indicator;\n\t},\n\n\tget_party_name: function(party_type) {\n\t\tvar dict = {'Customer': 'customer_name', 'Supplier': 'supplier_name', 'Employee': 'employee_name',\n\t\t\t'Member': 'member_name'};\n\t\treturn dict[party_type];\n\t},\n\n\tcopy_value_in_all_rows: function(doc, dt, dn, table_fieldname, fieldname) {\n\t\tvar d = locals[dt][dn];\n\t\tif(d[fieldname]){\n\t\t\tvar cl = doc[table_fieldname] || [];\n\t\t\tfor(var i = 0; i < cl.length; i++) {\n\t\t\t\tif(!cl[i][fieldname]) cl[i][fieldname] = d[fieldname];\n\t\t\t}\n\t\t}\n\t\trefresh_field(table_fieldname);\n\t},\n\n\tget_terms: function(tc_name, doc, callback) {\n\t\tif(tc_name) {\n\t\t\treturn frappe.call({\n\t\t\t\tmethod: 'erpnext.setup.doctype.terms_and_conditions.terms_and_conditions.get_terms_and_conditions',\n\t\t\t\targs: {\n\t\t\t\t\ttemplate_name: tc_name,\n\t\t\t\t\tdoc: doc\n\t\t\t\t},\n\t\t\t\tcallback: function(r) {\n\t\t\t\t\tcallback(r)\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\tmake_bank_account: function(doctype, docname) {\n\t\tfrappe.call({\n\t\t\tmethod: \"erpnext.accounts.doctype.bank_account.bank_account.make_bank_account\",\n\t\t\targs: {\n\t\t\t\tdoctype: doctype,\n\t\t\t\tdocname: docname\n\t\t\t},\n\t\t\tfreeze: true,\n\t\t\tcallback: function(r) {\n\t\t\t\tvar doclist = frappe.model.sync(r.message);\n\t\t\t\tfrappe.set_route(\"Form\", doclist[0].doctype, doclist[0].name);\n\t\t\t}\n\t\t})\n\t},\n\n\tadd_dimensions: function(report_name, index) {\n\t\tlet filters = frappe.query_reports[report_name].filters;\n\n\t\tfrappe.call({\n\t\t\tmethod: \"erpnext.accounts.doctype.accounting_dimension.accounting_dimension.get_dimensions\",\n\t\t\tcallback: function(r) {\n\t\t\t\tlet accounting_dimensions = r.message[0];\n\t\t\t\taccounting_dimensions.forEach((dimension) => {\n\t\t\t\t\tlet found = filters.some(el => el.fieldname === dimension['fieldname']);\n\n\t\t\t\t\tif (!found) {\n\t\t\t\t\t\tfilters.splice(index, 0, {\n\t\t\t\t\t\t\t\"fieldname\": dimension[\"fieldname\"],\n\t\t\t\t\t\t\t\"label\": __(dimension[\"label\"]),\n\t\t\t\t\t\t\t\"fieldtype\": \"MultiSelectList\",\n\t\t\t\t\t\t\tget_data: function(txt) {\n\t\t\t\t\t\t\t\treturn frappe.db.get_link_options(dimension[\"document_type\"], txt);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t},\n\n\tmake_subscription: function(doctype, docname) {\n\t\tfrappe.call({\n\t\t\tmethod: \"frappe.automation.doctype.auto_repeat.auto_repeat.make_auto_repeat\",\n\t\t\targs: {\n\t\t\t\tdoctype: doctype,\n\t\t\t\tdocname: docname\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\tvar doclist = frappe.model.sync(r.message);\n\t\t\t\tfrappe.set_route(\"Form\", doclist[0].doctype, doclist[0].name);\n\t\t\t}\n\t\t})\n\t},\n\n\tmake_pricing_rule: function(doctype, docname) {\n\t\tfrappe.call({\n\t\t\tmethod: \"erpnext.accounts.doctype.pricing_rule.pricing_rule.make_pricing_rule\",\n\t\t\targs: {\n\t\t\t\tdoctype: doctype,\n\t\t\t\tdocname: docname\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\tvar doclist = frappe.model.sync(r.message);\n\t\t\t\tfrappe.set_route(\"Form\", doclist[0].doctype, doclist[0].name);\n\t\t\t}\n\t\t})\n\t},\n\n\t/**\n\t* Checks if the first row of a given child table is empty\n\t* @param child_table - Child table Doctype\n\t* @return {Boolean}\n\t**/\n\tfirst_row_is_empty: function(child_table){\n\t\tif($.isArray(child_table) && child_table.length > 0) {\n\t\t\treturn !child_table[0].item_code;\n\t\t}\n\t\treturn false;\n\t},\n\n\t/**\n\t* Removes the first row of a child table if it is empty\n\t* @param {_Frm} frm - The current form\n\t* @param {String} child_table_name - The child table field name\n\t* @return {Boolean}\n\t**/\n\tremove_empty_first_row: function(frm, child_table_name){\n\t\tconst rows = frm['doc'][child_table_name];\n\t\tif (this.first_row_is_empty(rows)){\n\t\t\tfrm['doc'][child_table_name] = rows.splice(1);\n\t\t}\n\t\treturn rows;\n\t},\n\tget_tree_options: function(option) {\n\t\t// get valid options for tree based on user permission & locals dict\n\t\tlet unscrub_option = frappe.model.unscrub(option);\n\t\tlet user_permission = frappe.defaults.get_user_permissions();\n\t\tlet options;\n\n\t\tif(user_permission && user_permission[unscrub_option]) {\n\t\t\toptions = user_permission[unscrub_option].map(perm => perm.doc);\n\t\t} else {\n\t\t\toptions = $.map(locals[`:${unscrub_option}`], function(c) { return c.name; }).sort();\n\t\t}\n\n\t\t// filter unique values, as there may be multiple user permissions for any value\n\t\treturn options.filter((value, index, self) => self.indexOf(value) === index);\n\t},\n\tget_tree_default: function(option) {\n\t\t// set default for a field based on user permission\n\t\tlet options = this.get_tree_options(option);\n\t\tif(options.includes(frappe.defaults.get_default(option))) {\n\t\t\treturn frappe.defaults.get_default(option);\n\t\t} else {\n\t\t\treturn options[0];\n\t\t}\n\t},\n\toverrides_parent_value_in_all_rows: function(doc, dt, dn, table_fieldname, fieldname, parent_fieldname) {\n\t\tif (doc[parent_fieldname]) {\n\t\t\tlet cl = doc[table_fieldname] || [];\n\t\t\tfor (let i = 0; i < cl.length; i++) {\n\t\t\t\tcl[i][fieldname] = doc[parent_fieldname];\n\t\t\t}\n\t\t\tfrappe.refresh_field(table_fieldname);\n\t\t}\n\t},\n\tcreate_new_doc: function (doctype, update_fields) {\n\t\tfrappe.model.with_doctype(doctype, function() {\n\t\t\tvar new_doc = frappe.model.get_new_doc(doctype);\n\t\t\tfor (let [key, value] of Object.entries(update_fields)) {\n\t\t\t\tnew_doc[key] = value;\n\t\t\t}\n\t\t\tfrappe.ui.form.make_quick_entry(doctype, null, null, new_doc);\n\t\t});\n\t}\n\n});\n\nerpnext.utils.select_alternate_items = function(opts) {\n\tconst frm = opts.frm;\n\tconst warehouse_field = opts.warehouse_field || 'warehouse';\n\tconst item_field = opts.item_field || 'item_code';\n\n\tthis.data = [];\n\tconst dialog = new frappe.ui.Dialog({\n\t\ttitle: __(\"Select Alternate Item\"),\n\t\tfields: [\n\t\t\t{fieldtype:'Section Break', label: __('Items')},\n\t\t\t{\n\t\t\t\tfieldname: \"alternative_items\", fieldtype: \"Table\", cannot_add_rows: true,\n\t\t\t\tin_place_edit: true, data: this.data,\n\t\t\t\tget_data: () => {\n\t\t\t\t\treturn this.data;\n\t\t\t\t},\n\t\t\t\tfields: [{\n\t\t\t\t\tfieldtype:'Data',\n\t\t\t\t\tfieldname:\"docname\",\n\t\t\t\t\thidden: 1\n\t\t\t\t}, {\n\t\t\t\t\tfieldtype:'Link',\n\t\t\t\t\tfieldname:\"item_code\",\n\t\t\t\t\toptions: 'Item',\n\t\t\t\t\tin_list_view: 1,\n\t\t\t\t\tread_only: 1,\n\t\t\t\t\tlabel: __('Item Code')\n\t\t\t\t}, {\n\t\t\t\t\tfieldtype:'Link',\n\t\t\t\t\tfieldname:\"alternate_item\",\n\t\t\t\t\toptions: 'Item',\n\t\t\t\t\tdefault: \"\",\n\t\t\t\t\tin_list_view: 1,\n\t\t\t\t\tlabel: __('Alternate Item'),\n\t\t\t\t\tonchange: function() {\n\t\t\t\t\t\tconst item_code = this.get_value();\n\t\t\t\t\t\tconst warehouse = this.grid_row.on_grid_fields_dict.warehouse.get_value();\n\t\t\t\t\t\tif (item_code && warehouse) {\n\t\t\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\t\t\tmethod: \"erpnext.stock.utils.get_latest_stock_qty\",\n\t\t\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\t\t\titem_code: item_code,\n\t\t\t\t\t\t\t\t\twarehouse: warehouse\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcallback: (r) => {\n\t\t\t\t\t\t\t\t\tthis.grid_row.on_grid_fields_dict\n\t\t\t\t\t\t\t\t\t\t.actual_qty.set_value(r.message || 0);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tget_query: (e) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tquery: \"erpnext.stock.doctype.item_alternative.item_alternative.get_alternative_items\",\n\t\t\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\t\titem_code: e.item_code\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tfieldtype:'Link',\n\t\t\t\t\tfieldname:\"warehouse\",\n\t\t\t\t\toptions: 'Warehouse',\n\t\t\t\t\tdefault: \"\",\n\t\t\t\t\tin_list_view: 1,\n\t\t\t\t\tlabel: __('Warehouse'),\n\t\t\t\t\tonchange: function() {\n\t\t\t\t\t\tconst warehouse = this.get_value();\n\t\t\t\t\t\tconst item_code = this.grid_row.on_grid_fields_dict.item_code.get_value();\n\t\t\t\t\t\tif (item_code && warehouse) {\n\t\t\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\t\t\tmethod: \"erpnext.stock.utils.get_latest_stock_qty\",\n\t\t\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\t\t\titem_code: item_code,\n\t\t\t\t\t\t\t\t\twarehouse: warehouse\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcallback: (r) => {\n\t\t\t\t\t\t\t\t\tthis.grid_row.on_grid_fields_dict\n\t\t\t\t\t\t\t\t\t\t.actual_qty.set_value(r.message || 0);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t}, {\n\t\t\t\t\tfieldtype:'Float',\n\t\t\t\t\tfieldname:\"actual_qty\",\n\t\t\t\t\tdefault: 0,\n\t\t\t\t\tread_only: 1,\n\t\t\t\t\tin_list_view: 1,\n\t\t\t\t\tlabel: __('Available Qty')\n\t\t\t\t}]\n\t\t\t},\n\t\t],\n\t\tprimary_action: function() {\n\t\t\tconst args = this.get_values()[\"alternative_items\"];\n\t\t\tconst alternative_items = args.filter(d => {\n\t\t\t\tif (d.alternate_item && d.item_code != d.alternate_item) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\talternative_items.forEach(d => {\n\t\t\t\tlet row = frappe.get_doc(opts.child_doctype, d.docname);\n\t\t\t\tlet qty = null;\n\t\t\t\tif (row.doctype === 'Work Order Item') {\n\t\t\t\t\tqty = row.required_qty;\n\t\t\t\t} else {\n\t\t\t\t\tqty = row.qty;\n\t\t\t\t}\n\t\t\t\trow[item_field] = d.alternate_item;\n\t\t\t\tfrappe.model.set_value(row.doctype, row.name, 'qty', qty);\n\t\t\t\tfrappe.model.set_value(row.doctype, row.name, opts.original_item_field, d.item_code);\n\t\t\t\tfrm.trigger(item_field, row.doctype, row.name);\n\t\t\t});\n\n\t\t\trefresh_field(opts.child_docname);\n\t\t\tthis.hide();\n\t\t},\n\t\tprimary_action_label: __('Update')\n\t});\n\n\tfrm.doc[opts.child_docname].forEach(d => {\n\t\tif (!opts.condition || opts.condition(d)) {\n\t\t\tdialog.fields_dict.alternative_items.df.data.push({\n\t\t\t\t\"docname\": d.name,\n\t\t\t\t\"item_code\": d[item_field],\n\t\t\t\t\"warehouse\": d[warehouse_field],\n\t\t\t\t\"actual_qty\": d.actual_qty\n\t\t\t});\n\t\t}\n\t})\n\n\tthis.data = dialog.fields_dict.alternative_items.df.data;\n\tdialog.fields_dict.alternative_items.grid.refresh();\n\tdialog.show();\n}\n\nerpnext.utils.update_child_items = function(opts) {\n\tconst frm = opts.frm;\n\tconst cannot_add_row = (typeof opts.cannot_add_row === 'undefined') ? true : opts.cannot_add_row;\n\tconst child_docname = (typeof opts.cannot_add_row === 'undefined') ? \"items\" : opts.child_docname;\n\tconst child_meta = frappe.get_meta(`${frm.doc.doctype} Item`);\n\tconst get_precision = (fieldname) => child_meta.fields.find(f => f.fieldname == fieldname).precision;\n\n\tthis.data = frm.doc[opts.child_docname].map((d) => {\n\t\treturn {\n\t\t\t\"docname\": d.name,\n\t\t\t\"name\": d.name,\n\t\t\t\"item_code\": d.item_code,\n\t\t\t\"delivery_date\": d.delivery_date,\n\t\t\t\"schedule_date\": d.schedule_date,\n\t\t\t\"conversion_factor\": d.conversion_factor,\n\t\t\t\"qty\": d.qty,\n\t\t\t\"rate\": d.rate,\n\t\t\t\"uom\": d.uom\n\t\t}\n\t});\n\n\tconst fields = [{\n\t\tfieldtype:'Data',\n\t\tfieldname:\"docname\",\n\t\tread_only: 1,\n\t\thidden: 1,\n\t}, {\n\t\tfieldtype:'Link',\n\t\tfieldname:\"item_code\",\n\t\toptions: 'Item',\n\t\tin_list_view: 1,\n\t\tread_only: 0,\n\t\tdisabled: 0,\n\t\tlabel: __('Item Code'),\n\t\tget_query: function() {\n\t\t\tlet filters;\n\t\t\tif (frm.doc.doctype == 'Sales Order') {\n\t\t\t\tfilters = {\"is_sales_item\": 1};\n\t\t\t} else if (frm.doc.doctype == 'Purchase Order') {\n\t\t\t\tif (frm.doc.is_subcontracted == \"Yes\") {\n\t\t\t\t\tfilters = {\"is_sub_contracted_item\": 1};\n\t\t\t\t} else {\n\t\t\t\t\tfilters = {\"is_purchase_item\": 1};\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tquery: \"erpnext.controllers.queries.item_query\",\n\t\t\t\tfilters: filters\n\t\t\t};\n\t\t}\n\t}, {\n\t\tfieldtype:'Link',\n\t\tfieldname:'uom',\n\t\toptions: 'UOM',\n\t\tread_only: 0,\n\t\tlabel: __('UOM'),\n\t\treqd: 1,\n\t\tonchange: function () {\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"erpnext.stock.get_item_details.get_conversion_factor\",\n\t\t\t\targs: { item_code: this.doc.item_code, uom: this.value },\n\t\t\t\tcallback: r => {\n\t\t\t\t\tif(!r.exc) {\n\t\t\t\t\t\tif (this.doc.conversion_factor == r.message.conversion_factor) return;\n\n\t\t\t\t\t\tconst docname = this.doc.docname;\n\t\t\t\t\t\tdialog.fields_dict.trans_items.df.data.some(doc => {\n\t\t\t\t\t\t\tif (doc.docname == docname) {\n\t\t\t\t\t\t\t\tdoc.conversion_factor = r.message.conversion_factor;\n\t\t\t\t\t\t\t\tdialog.fields_dict.trans_items.grid.refresh();\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}, {\n\t\tfieldtype:'Float',\n\t\tfieldname:\"qty\",\n\t\tdefault: 0,\n\t\tread_only: 0,\n\t\tin_list_view: 1,\n\t\tlabel: __('Qty'),\n\t\tprecision: get_precision(\"qty\")\n\t}, {\n\t\tfieldtype:'Currency',\n\t\tfieldname:\"rate\",\n\t\toptions: \"currency\",\n\t\tdefault: 0,\n\t\tread_only: 0,\n\t\tin_list_view: 1,\n\t\tlabel: __('Rate'),\n\t\tprecision: get_precision(\"rate\")\n\t}];\n\n\tif (frm.doc.doctype == 'Sales Order' || frm.doc.doctype == 'Purchase Order' ) {\n\t\tfields.splice(2, 0, {\n\t\t\tfieldtype: 'Date',\n\t\t\tfieldname: frm.doc.doctype == 'Sales Order' ? \"delivery_date\" : \"schedule_date\",\n\t\t\tin_list_view: 1,\n\t\t\tlabel: frm.doc.doctype == 'Sales Order' ? __(\"Delivery Date\") : __(\"Reqd by date\"),\n\t\t\treqd: 1\n\t\t})\n\t\tfields.splice(3, 0, {\n\t\t\tfieldtype: 'Float',\n\t\t\tfieldname: \"conversion_factor\",\n\t\t\tin_list_view: 1,\n\t\t\tlabel: __(\"Conversion Factor\"),\n\t\t\tprecision: get_precision('conversion_factor')\n\t\t})\n\t}\n\n\tnew frappe.ui.Dialog({\n\t\ttitle: __(\"Update Items\"),\n\t\tfields: [\n\t\t\t{\n\t\t\t\tfieldname: \"trans_items\",\n\t\t\t\tfieldtype: \"Table\",\n\t\t\t\tlabel: \"Items\",\n\t\t\t\tcannot_add_rows: cannot_add_row,\n\t\t\t\tin_place_edit: false,\n\t\t\t\treqd: 1,\n\t\t\t\tdata: this.data,\n\t\t\t\tget_data: () => {\n\t\t\t\t\treturn this.data;\n\t\t\t\t},\n\t\t\t\tfields: fields\n\t\t\t},\n\t\t],\n\t\tprimary_action: function() {\n\t\t\tconst trans_items = this.get_values()[\"trans_items\"].filter((item) => !!item.item_code);\n\t\t\tfrappe.call({\n\t\t\t\tmethod: 'erpnext.controllers.accounts_controller.update_child_qty_rate',\n\t\t\t\tfreeze: true,\n\t\t\t\targs: {\n\t\t\t\t\t'parent_doctype': frm.doc.doctype,\n\t\t\t\t\t'trans_items': trans_items,\n\t\t\t\t\t'parent_doctype_name': frm.doc.name,\n\t\t\t\t\t'child_docname': child_docname\n\t\t\t\t},\n\t\t\t\tcallback: function() {\n\t\t\t\t\tfrm.reload_doc();\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.hide();\n\t\t\trefresh_field(\"items\");\n\t\t},\n\t\tprimary_action_label: __('Update')\n\t});\n\n\tfrm.doc[opts.child_docname].forEach(d => {\n\t\tdialog.fields_dict.trans_items.df.data.push({\n\t\t\t\"docname\": d.name,\n\t\t\t\"name\": d.name,\n\t\t\t\"item_code\": d.item_code,\n\t\t\t\"delivery_date\": d.delivery_date,\n\t\t\t\"schedule_date\": d.schedule_date,\n\t\t\t\"conversion_factor\": d.conversion_factor,\n\t\t\t\"qty\": d.qty,\n\t\t\t\"rate\": d.rate,\n\t\t\t\"uom\": d.uom\n\t\t});\n\t\tthis.data = dialog.fields_dict.trans_items.df.data;\n\t\tdialog.fields_dict.trans_items.grid.refresh();\n\t})\n\tdialog.show();\n}\n\nerpnext.utils.map_current_doc = function(opts) {\n\tfunction _map() {\n\t\tif($.isArray(cur_frm.doc.items) && cur_frm.doc.items.length > 0) {\n\t\t\t// remove first item row if empty\n\t\t\tif(!cur_frm.doc.items[0].item_code) {\n\t\t\t\tcur_frm.doc.items = cur_frm.doc.items.splice(1);\n\t\t\t}\n\n\t\t\t// find the doctype of the items table\n\t\t\tvar items_doctype = frappe.meta.get_docfield(cur_frm.doctype, 'items').options;\n\n\t\t\t// find the link fieldname from items table for the given\n\t\t\t// source_doctype\n\t\t\tvar link_fieldname = null;\n\t\t\tfrappe.get_meta(items_doctype).fields.forEach(function(d) {\n\t\t\t\tif(d.options===opts.source_doctype) link_fieldname = d.fieldname; });\n\n\t\t\t// search in existing items if the source_name is already set and full qty fetched\n\t\t\tvar already_set = false;\n\t\t\tvar item_qty_map = {};\n\n\t\t\t$.each(cur_frm.doc.items, function(i, d) {\n\t\t\t\topts.source_name.forEach(function(src) {\n\t\t\t\t\tif(d[link_fieldname]==src) {\n\t\t\t\t\t\talready_set = true;\n\t\t\t\t\t\tif (item_qty_map[d.item_code])\n\t\t\t\t\t\t\titem_qty_map[d.item_code] += flt(d.qty);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\titem_qty_map[d.item_code] = flt(d.qty);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tif(already_set) {\n\t\t\t\topts.source_name.forEach(function(src) {\n\t\t\t\t\tfrappe.model.with_doc(opts.source_doctype, src, function(r) {\n\t\t\t\t\t\tvar source_doc = frappe.model.get_doc(opts.source_doctype, src);\n\t\t\t\t\t\t$.each(source_doc.items || [], function(i, row) {\n\t\t\t\t\t\t\tif(row.qty > flt(item_qty_map[row.item_code])) {\n\t\t\t\t\t\t\t\talready_set = false;\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\n\t\t\t\t\tif(already_set) {\n\t\t\t\t\t\tfrappe.msgprint(__(\"You have already selected items from {0} {1}\",\n\t\t\t\t\t\t\t[opts.source_doctype, src]));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\treturn frappe.call({\n\t\t\t// Sometimes we hit the limit for URL length of a GET request\n\t\t\t// as we send the full target_doc. Hence this is a POST request.\n\t\t\ttype: \"POST\",\n\t\t\tmethod: 'frappe.model.mapper.map_docs',\n\t\t\targs: {\n\t\t\t\t\"method\": opts.method,\n\t\t\t\t\"source_names\": opts.source_name,\n\t\t\t\t\"target_doc\": cur_frm.doc,\n\t\t\t\t\"args\": opts.args\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\tif(!r.exc) {\n\t\t\t\t\tvar doc = frappe.model.sync(r.message);\n\t\t\t\t\tcur_frm.dirty();\n\t\t\t\t\tcur_frm.refresh();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tlet query_args = {};\n\tif (opts.get_query_filters) {\n\t\tquery_args.filters = opts.get_query_filters;\n\t}\n\n\tif (opts.get_query_method) {\n\t\tquery_args.query = opts.get_query_method;\n\t}\n\n\tif (query_args.filters || query_args.query) {\n\t\topts.get_query = () => query_args;\n\t}\n\n\tif (opts.source_doctype) {\n\t\tconst d = new frappe.ui.form.MultiSelectDialog({\n\t\t\tdoctype: opts.source_doctype,\n\t\t\ttarget: opts.target,\n\t\t\tdate_field: opts.date_field || undefined,\n\t\t\tsetters: opts.setters,\n\t\t\tget_query: opts.get_query,\n\t\t\tadd_filters_group: 1,\n\t\t\tallow_child_item_selection: opts.allow_child_item_selection,\n\t\t\tchild_fieldname: opts.child_fieldname,\n\t\t\tchild_columns: opts.child_columns,\n\t\t\tsize: \"extra-large\", // Finbyz Changes\n\t\t\taction: function(selections, args) {\n\t\t\t\tlet values = selections;\n\t\t\t\tif (values.length === 0) {\n\t\t\t\t\tfrappe.msgprint(__(\"Please select {0}\", [opts.source_doctype]))\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\topts.source_name = values;\n\t\t\t\tif (opts.allow_child_item_selection) {\n\t\t\t\t\t// args contains filtered child docnames\n\t\t\t\t\topts.args = args;\n\t\t\t\t}\n\t\t\t\td.dialog.hide();\n\t\t\t\t_map();\n\t\t\t},\n\t\t});\n\n\t\treturn d;\n\t}\n\n\tif (opts.source_name) {\n\t\topts.source_name = [opts.source_name];\n\t\t_map();\n\t}\n}\n\nfrappe.form.link_formatters['Item'] = function(value, doc) {\n\tif (doc && value && doc.item_name && doc.item_name !== value && doc.item_code === value) {\n\t\treturn value + ': ' + doc.item_name;\n\t} else if (!value && doc.doctype && doc.item_name) {\n\t\t// format blank value in child table\n\t\treturn doc.item_name;\n\t} else {\n\t\t// if value is blank in report view or item code and name are the same, return as is\n\t\treturn value;\n\t}\n}\n\nfrappe.form.link_formatters['Employee'] = function(value, doc) {\n\tif (doc && value && doc.employee_name && doc.employee_name !== value && doc.employee === value) {\n\t\treturn value + ': ' + doc.employee_name;\n\t} else if (!value && doc.doctype && doc.employee_name) {\n\t\t// format blank value in child table\n\t\treturn doc.employee;\n\t} else {\n\t\t// if value is blank in report view or project name and name are the same, return as is\n\t\treturn value;\n\t}\n}\n\nfrappe.form.link_formatters['Project'] = function(value, doc) {\n\tif (doc && value && doc.project_name && doc.project_name !== value && doc.project === value) {\n\t\treturn value + ': ' + doc.project_name;\n\t} else if (!value && doc.doctype && doc.project_name) {\n\t\t// format blank value in child table\n\t\treturn doc.project;\n\t} else {\n\t\t// if value is blank in report view or project name and name are the same, return as is\n\t\treturn value;\n\t}\n};\n\n// add description on posting time\n$(document).on('app_ready', function() {\n\tif(!frappe.datetime.is_timezone_same()) {\n\t\t$.each([\"Stock Reconciliation\", \"Stock Entry\", \"Stock Ledger Entry\",\n\t\t\t\"Delivery Note\", \"Purchase Receipt\", \"Sales Invoice\"], function(i, d) {\n\t\t\tfrappe.ui.form.on(d, \"onload\", function(frm) {\n\t\t\t\tcur_frm.set_df_property(\"posting_time\", \"description\",\n\t\t\t\t\tfrappe.sys_defaults.time_zone);\n\t\t\t});\n\t\t});\n\t}\n});\n\nfunction attach_selector_button(inner_text, append_loction, context, grid_row) {\n\tlet $btn_div = $(\"<div>\").css({\"margin-bottom\": \"10px\", \"margin-top\": \"10px\"})\n\t\t.appendTo(append_loction);\n\tlet $btn = $(`<button class=\"btn btn-sm btn-default\">${inner_text}</button>`)\n\t\t.appendTo($btn_div);\n\n\t$btn.on(\"click\", function() {\n\t\tcontext.show_serial_batch_selector(grid_row.frm, grid_row.doc, \"\", \"\", true);\n\t});\n}\n", "// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// License: GNU General Public License v3. See license.txt\n\nfrappe.query_reports[\"Item-wise Sales Register\"] = {\n\t\"filters\": [\n\t\t{\n\t\t\t\"fieldname\":\"from_date\",\n\t\t\t\"label\": __(\"From Date\"),\n\t\t\t\"fieldtype\": \"Date\",\n\t\t\t\"default\": frappe.datetime.add_months(frappe.datetime.get_today(), -1),\n\t\t\t\"reqd\": 1,\n\t\t},\n\t\t{\n\t\t\t\"fieldname\":\"to_date\",\n\t\t\t\"label\": __(\"To Date\"),\n\t\t\t\"fieldtype\": \"Date\",\n\t\t\t\"default\": frappe.datetime.get_today(),\n\t\t\t\"reqd\": 1,\n\t\t},\n\t\t{\n\t\t\t\"fieldname\": \"customer\",\n\t\t\t\"label\": __(\"Customer\"),\n\t\t\t\"fieldtype\": \"Link\",\n\t\t\t\"options\": \"Customer\"\n\t\t},\n\t\t{\n\t\t\t\"fieldname\": \"company\",\n\t\t\t\"label\": __(\"Company\"),\n\t\t\t\"fieldtype\": \"Link\",\n\t\t\t\"options\": \"Company\",\n\t\t\t\"default\": frappe.defaults.get_user_default(\"Company\")\n\t\t},\n\t\t{\n\t\t\t\"fieldname\": \"mode_of_payment\",\n\t\t\t\"label\": __(\"Mode of Payment\"),\n\t\t\t\"fieldtype\": \"Link\",\n\t\t\t\"options\": \"Mode of Payment\"\n\t\t},\n\t\t{\n\t\t\t\"fieldname\": \"warehouse\",\n\t\t\t\"label\": __(\"Warehouse\"),\n\t\t\t\"fieldtype\": \"Link\",\n\t\t\t\"options\": \"Warehouse\"\n\t\t},\n\t\t{\n\t\t\t\"fieldname\": \"brand\",\n\t\t\t\"label\": __(\"Brand\"),\n\t\t\t\"fieldtype\": \"Link\",\n\t\t\t\"options\": \"Brand\"\n\t\t},\n\t\t{\n\t\t\t\"fieldname\": \"item_group\",\n\t\t\t\"label\": __(\"Item Group\"),\n\t\t\t\"fieldtype\": \"Link\",\n\t\t\t\"options\": \"Item Group\"\n\t\t},\n\t\t{\n\t\t\t\"label\": __(\"Group By\"),\n\t\t\t\"fieldname\": \"group_by\",\n\t\t\t\"fieldtype\": \"Select\",\n\t\t\t\"options\": [\"Customer Group\", \"Customer\", \"Item Group\", \"Item\", \"Territory\", \"Invoice\"]\n\t\t}\n\t],\n\t\"formatter\": function(value, row, column, data, default_formatter) {\n\t\tvalue = default_formatter(value, row, column, data);\n\t\tif (data && data.bold) {\n\t\t\tvalue = value.bold();\n\n\t\t}\n\t\treturn value;\n\t}\n}\n\nfunction fetch_gstins(report) {\n\tvar company_gstins = report.get_filter('company_gstin');\n\tvar company = report.get_filter_value('company');\n\tif (company) {\n\t\tfrappe.call({\n\t\t\tmethod:'erpnext.regional.india.utils.get_gstins_for_company',\n\t\t\tasync: false,\n\t\t\targs: {\n\t\t\t\tcompany: company\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\tr.message.unshift(\"\");\n\t\t\t\tcompany_gstins.df.options = r.message;\n\t\t\t\tcompany_gstins.refresh();\n\t\t\t}\n\t\t});\n\t} else {\n\t\tcompany_gstins.df.options = [\"\"];\n\t\tcompany_gstins.refresh();\n\t}\n}\n\nlet filters = frappe.query_reports[\"Item-wise Sales Register\"][\"filters\"];\n\n// Add GSTIN filter\nfilters = filters.concat({\n    \"fieldname\":\"company_gstin\",\n    \"label\": __(\"Company GSTIN\"),\n    \"fieldtype\": \"Select\",\n    \"placeholder\":\"Company GSTIN\",\n    \"options\": [\"\"],\n    \"width\": \"80\"\n},\n{\n    \"fieldname\":\"is_return\",\n    \"label\": __(\"Return Entries\"),\n    \"fieldtype\": \"Check\"\n},\n// {\n//     \"fieldname\":\"invoice_type\",\n//     \"label\": __(\"Invoice Type\"),\n//     \"fieldtype\": \"Select\",\n//     \"placeholder\":\"Invoice Type\",\n//     \"options\": [\"\", \"Regular\", \"SEZ\", \"Export\", \"Deemed Export\"]\n// },\n{\n    \"fieldname\":\"gst_category\",\n    \"label\": __(\"GST Category\"),\n    \"fieldtype\": \"Select\",\n    \"placeholder\":\"GST Category\",\n    \"options\": [\"\", \"Registered Regular\",\"Registered Composition\",\"Unregistered\",\"SEZ\",\"Overseas\",\"Consumer\",\"Deemed Export\",\"UIN Holders\"]\n});\n\n// Handle company on change\nfor (var i = 0; i < filters.length; ++i) {\n    if (filters[i].fieldname === 'company') {\n        filters[i].on_change = fetch_gstins;\n    }\n}\n\nfrappe.query_reports[\"GST Itemised Sales Register\"] = { \"filters\": filters, \"onload\": fetch_gstins };\n", "// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// License: GNU General Public License v3. See license.txt\n\nfrappe.query_reports[\"Item-wise Purchase Register\"] = {\n\t\"filters\": [\n\t\t{\n\t\t\t\"fieldname\":\"from_date\",\n\t\t\t\"label\": __(\"From Date\"),\n\t\t\t\"fieldtype\": \"Date\",\n\t\t\t\"default\": frappe.datetime.add_months(frappe.datetime.get_today(), -1),\n\t\t\t\"reqd\": 1,\n\t\t},\n\t\t{\n\t\t\t\"fieldname\":\"to_date\",\n\t\t\t\"label\": __(\"To Date\"),\n\t\t\t\"fieldtype\": \"Date\",\n\t\t\t\"default\": frappe.datetime.get_today(),\n\t\t\t\"reqd\": 1,\n\t\t},\n\t\t{\n\t\t\t\"fieldname\": \"item_code\",\n\t\t\t\"label\": __(\"Item\"),\n\t\t\t\"fieldtype\": \"Link\",\n\t\t\t\"options\": \"Item\",\n\t\t},\n\t\t{\n\t\t\t\"fieldname\":\"supplier\",\n\t\t\t\"label\": __(\"Supplier\"),\n\t\t\t\"fieldtype\": \"Link\",\n\t\t\t\"options\": \"Supplier\"\n\t\t},\n\t\t{\n\t\t\t\"fieldname\":\"company\",\n\t\t\t\"label\": __(\"Company\"),\n\t\t\t\"fieldtype\": \"Link\",\n\t\t\t\"options\": \"Company\",\n\t\t\t\"default\": frappe.defaults.get_user_default(\"Company\")\n\t\t},\n\t\t{\n\t\t\t\"fieldname\":\"mode_of_payment\",\n\t\t\t\"label\": __(\"Mode of Payment\"),\n\t\t\t\"fieldtype\": \"Link\",\n\t\t\t\"options\": \"Mode of Payment\"\n\t\t},\n        {\n            \"fieldname\":\"is_return\",\n            \"label\": __(\"Return Entries\"),\n            \"fieldtype\": \"Check\"\n        },\n\t\t{\n\t\t\t\"label\": __(\"Group By\"),\n\t\t\t\"fieldname\": \"group_by\",\n\t\t\t\"fieldtype\": \"Select\",\n\t\t\t\"options\": [\"Supplier\", \"Item Group\", \"Item\", \"Invoice\"]\n\t\t}\n\t],\n\t\"formatter\": function(value, row, column, data, default_formatter) {\n\t\tvalue = default_formatter(value, row, column, data);\n\t\tif (data && data.bold) {\n\t\t\tvalue = value.bold();\n\n\t\t}\n\t\treturn value;\n\t}\n}\nfrappe.query_reports[\"GST Itemised Purchase Register\"] = frappe.query_reports[\"Item-wise Purchase Register\"]\n", "// Copyright (c) 2018, Frappe Technologies Pvt. Ltd. and Contributors\n// License: GNU General Public License v3. See license.txt\nfunction getUrlParameter(name) {\n    name = name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n    var regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\n    var results = regex.exec(location.search);\n    return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n};\nfrappe.query_reports[\"General Ledger\"] = {\n\tonload: function() {\n\t\tvar party = getUrlParameter(\"party\");\n        var party_type = getUrlParameter(\"party_type\");\n        var from_date = getUrlParameter(\"from_date\");\n        var to_date = getUrlParameter(\"to_date\");\n        if(party_type){\n            frappe.query_report.set_filter_value('party_type', party_type);\n        }\n        if(from_date){\n            frappe.query_report.set_filter_value('from_date', from_date);\n        }\n        if(to_date){\n            frappe.query_report.set_filter_value('to_date', to_date);\n        }\n\t\tif(party){\n\t\t\tsetTimeout(()=>{\n\t\t\t\tfrappe.query_report.set_filter_value('party', party);\n\t\t\t},200)\n\t\t}\n\t},\n\t\"filters\": [\n\t\t{\n\t\t\t\"fieldname\":\"company\",\n\t\t\t\"label\": __(\"Company\"),\n\t\t\t\"fieldtype\": \"Link\",\n\t\t\t\"options\": \"Company\",\n\t\t\t\"default\": frappe.defaults.get_user_default(\"Company\"),\n\t\t\t\"reqd\": 1\n\t\t},\n\t\t{\n\t\t\t\"fieldname\":\"finance_book\",\n\t\t\t\"label\": __(\"Finance Book\"),\n\t\t\t\"fieldtype\": \"Link\",\n\t\t\t\"options\": \"Finance Book\"\n\t\t},\n\t\t{\n\t\t\t\"fieldname\":\"from_date\",\n\t\t\t\"label\": __(\"From Date\"),\n\t\t\t\"fieldtype\": \"Date\",\n\t\t\t\"default\": frappe.datetime.add_months(frappe.datetime.get_today(), -1),\n\t\t\t\"reqd\": 1,\n\t\t\t\"width\": \"60px\"\n\t\t},\n\t\t{\n\t\t\t\"fieldname\":\"to_date\",\n\t\t\t\"label\": __(\"To Date\"),\n\t\t\t\"fieldtype\": \"Date\",\n\t\t\t\"default\": frappe.datetime.get_today(),\n\t\t\t\"reqd\": 1,\n\t\t\t\"width\": \"60px\"\n\t\t},\n\t\t{\n\t\t\t\"fieldname\":\"account\",\n\t\t\t\"label\": __(\"Account\"),\n\t\t\t\"fieldtype\": \"MultiSelectList\",\n\t\t\t\"options\": \"Account\",\n\t\t\tget_data: function(txt) {\n\t\t\t\treturn frappe.db.get_link_options('Account', txt, {\n\t\t\t\t\tcompany: frappe.query_report.get_filter_value(\"company\")\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"fieldname\":\"voucher_no\",\n\t\t\t\"label\": __(\"Voucher No\"),\n\t\t\t\"fieldtype\": \"Data\",\n\t\t\ton_change: function() {\n\t\t\t\tfrappe.query_report.set_filter_value('group_by', \"Group by Voucher (Consolidated)\");\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"fieldtype\": \"Break\",\n\t\t},\n\t\t{\n\t\t\t\"fieldname\":\"party_type\",\n\t\t\t\"label\": __(\"Party Type\"),\n\t\t\t\"fieldtype\": \"Link\",\n\t\t\t\"options\": \"Party Type\",\n\t\t\t\"default\": \"\",\n\t\t\ton_change: function() {\n\t\t\t\tfrappe.query_report.set_filter_value('party', \"\");\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"fieldname\":\"party\",\n\t\t\t\"label\": __(\"Party\"),\n\t\t\t\"fieldtype\": \"MultiSelectList\",\n\t\t\tget_data: function(txt) {\n\t\t\t\tif (!frappe.query_report.filters) return;\n\n\t\t\t\tlet party_type = frappe.query_report.get_filter_value('party_type');\n\t\t\t\tif (!party_type) return;\n\n\t\t\t\treturn frappe.db.get_link_options(party_type, txt);\n\t\t\t},\n\t\t\ton_change: function() {\n\t\t\t\tvar party_type = frappe.query_report.get_filter_value('party_type');\n\t\t\t\tvar parties = frappe.query_report.get_filter_value('party');\n\n\t\t\t\tif(!party_type || parties.length === 0 || parties.length > 1) {\n\t\t\t\t\tfrappe.query_report.set_filter_value('party_name', \"\");\n\t\t\t\t\tfrappe.query_report.set_filter_value('tax_id', \"\");\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tvar party = parties[0];\n\t\t\t\t\tvar fieldname = erpnext.utils.get_party_name(party_type) || \"name\";\n\t\t\t\t\tfrappe.db.get_value(party_type, party, fieldname, function(value) {\n\t\t\t\t\t\tfrappe.query_report.set_filter_value('party_name', value[fieldname]);\n\t\t\t\t\t});\n\n\t\t\t\t\tif (party_type === \"Customer\" || party_type === \"Supplier\") {\n\t\t\t\t\t\tfrappe.db.get_value(party_type, party, \"tax_id\", function(value) {\n\t\t\t\t\t\t\tfrappe.query_report.set_filter_value('tax_id', value[\"tax_id\"]);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"fieldname\":\"party_name\",\n\t\t\t\"label\": __(\"Party Name\"),\n\t\t\t\"fieldtype\": \"Data\",\n\t\t\t\"hidden\": 1\n\t\t},\n\t\t{\n\t\t\t\"fieldname\":\"group_by\",\n\t\t\t\"label\": __(\"Group by\"),\n\t\t\t\"fieldtype\": \"Select\",\n\t\t\t\"options\": [\n\t\t\t\t\"\",\n\t\t\t\t{\n\t\t\t\t\tlabel: __(\"Group by Voucher\"),\n\t\t\t\t\tvalue: \"Group by Voucher\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: __(\"Group by Voucher (Consolidated)\"),\n\t\t\t\t\tvalue: \"Group by Voucher (Consolidated)\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: __(\"Group by Account\"),\n\t\t\t\t\tvalue: \"Group by Account\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: __(\"Group by Party\"),\n\t\t\t\t\tvalue: \"Group by Party\",\n\t\t\t\t},\n\t\t\t],\n\t\t\t\"default\": \"Group by Voucher (Consolidated)\"\n\t\t},\n\t\t{\n\t\t\t\"fieldname\":\"tax_id\",\n\t\t\t\"label\": __(\"Tax Id\"),\n\t\t\t\"fieldtype\": \"Data\",\n\t\t\t\"hidden\": 1\n\t\t},\n\t\t{\n\t\t\t\"fieldname\": \"presentation_currency\",\n\t\t\t\"label\": __(\"Currency\"),\n\t\t\t\"fieldtype\": \"Select\",\n\t\t\t\"options\": erpnext.get_presentation_currency_list()\n\t\t},\n\t\t{\n\t\t\t\"fieldname\":\"cost_center\",\n\t\t\t\"label\": __(\"Cost Center\"),\n\t\t\t\"fieldtype\": \"MultiSelectList\",\n\t\t\tget_data: function(txt) {\n\t\t\t\treturn frappe.db.get_link_options('Cost Center', txt, {\n\t\t\t\t\tcompany: frappe.query_report.get_filter_value(\"company\")\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"fieldname\":\"project\",\n\t\t\t\"label\": __(\"Project\"),\n\t\t\t\"fieldtype\": \"MultiSelectList\",\n\t\t\tget_data: function(txt) {\n\t\t\t\treturn frappe.db.get_link_options('Project', txt, {\n\t\t\t\t\tcompany: frappe.query_report.get_filter_value(\"company\")\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"fieldname\": \"include_dimensions\",\n\t\t\t\"label\": __(\"Consider Accounting Dimensions\"),\n\t\t\t\"fieldtype\": \"Check\",\n\t\t\t\"default\": 1\n\t\t},\n\t\t{\n\t\t\t\"fieldname\": \"show_opening_entries\",\n\t\t\t\"label\": __(\"Show Opening Entries\"),\n\t\t\t\"fieldtype\": \"Check\"\n\t\t},\n\t\t{\n\t\t\t\"fieldname\": \"include_default_book_entries\",\n\t\t\t\"label\": __(\"Include Default Book Entries\"),\n\t\t\t\"fieldtype\": \"Check\"\n\t\t},\n\t\t{\n\t\t\t\"fieldname\": \"show_cancelled_entries\",\n\t\t\t\"label\": __(\"Show Cancelled Entries\"),\n\t\t\t\"fieldtype\": \"Check\"\n\t\t},\n\t\t{\n\t\t\t\"fieldname\": \"show_net_values_in_party_account\",\n\t\t\t\"label\": __(\"Show Net Values in Party Account\"),\n\t\t\t\"fieldtype\": \"Check\"\n\t\t},\n\t\t{\n\t\t\t\"fieldname\": \"fx_account\",\n\t\t\t\"label\": __(\"Fx Account\"),\n\t\t\t\"fieldtype\": \"Check\"\n\t\t}\n\t]\n}\n\nerpnext.utils.add_dimensions('General Ledger', 15)\n"],
  "mappings": "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",
  "names": []
}
